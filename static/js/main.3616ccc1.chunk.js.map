{"version":3,"sources":["R018_PropsDatatype.js","App.js","reportWebVitals.js","index.js"],"names":["R018_PropsDatatype","this","props","String","Number","Boolean","Array","ObjectJson","Function","style","padding","toString","JSON","stringify","Component","App","react","twohundred","console","log","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sSA4BeA,E,4JAxBb,WACE,MAA+DC,KAAKC,MAA9DC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,WAAYC,EAAlD,EAAkDA,SAClD,OACE,yBAAKC,MAAO,CAAEC,QAAS,QACrB,2CAAiBP,GACjB,2CAAiBC,GACjB,+CAAqBC,EAAQM,YAC7B,0CAAgBL,EAAMK,YACtB,+CAAqBC,KAAKC,UAAUN,IACpC,6CAAmBC,Q,GAVMM,aCkBlBC,MAjBf,WACE,OACE,6BACE,gDACA,qEACA,kBAAC,EAAD,CACEZ,OAAO,QACPC,OAAQ,IACRC,SAAS,EACTC,MAAO,CAAC,EAAG,EAAG,GACdC,WAAY,CAAES,MAAO,qBAAOC,WAAY,OACxCT,SAAUU,QAAQC,IAAI,gCCHfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBb,UACxC,6BAAqBc,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAKjDX,K","file":"static/js/main.3616ccc1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport datatype from \"prop-types\";\n\nclass R018_PropsDatatype extends Component {\n  render() {\n    let { String, Number, Boolean, Array, ObjectJson, Function } = this.props;\n    return (\n      <div style={{ padding: \"0px\" }}>\n        <p>StringProps: {String}</p>\n        <p>NumberProps: {Number}</p>\n        <span>BooleanProps: {Boolean.toString()}</span>\n        <p>ArrayProps: {Array.toString()}</p>\n        <p>ObjectJsonProps: {JSON.stringify(ObjectJson)}</p>\n        <p>FunctionProps: {Function}</p>\n      </div>\n    );\n  }\n}\n\nR018_PropsDatatype.propTypes = {\n  String: datatype.number,\n  Number: datatype.number,\n  Boolean: datatype.bool,\n  Array: datatype.array,\n  ObjectJson: datatype.object,\n  FunctionProps: datatype.func,\n};\n\nexport default R018_PropsDatatype;\n","import React from \"react\";\nimport \"./App.css\";\nimport PropsDatatype from \"./R018_PropsDatatype\";\n\nfunction App() {\n  return (\n    <div>\n      <h1>Start React 200!</h1>\n      <p>PropsDatatype 적용하기</p>\n      <PropsDatatype\n        String=\"react\"\n        Number={200}\n        Boolean={1 == 1}\n        Array={[0, 1, 8]}\n        ObjectJson={{ react: \"리액트\", twohundred: \"200\" }}\n        Function={console.log(\"FunctionProps: function!\")}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}