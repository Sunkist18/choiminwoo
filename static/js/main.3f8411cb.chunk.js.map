{"version":3,"sources":["ReactstrapProgress.js","App.js","reportWebVitals.js","index.js"],"names":["ReactstrapProgress","props","progress","state","setTimeout","this","setState","bind","color","value","multi","bar","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+TAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,SAAU,WACmB,MAAxB,EAAKC,MAAMD,UACZE,WAAW,WACTC,KAAKC,SAAS,CAACJ,SAAUG,KAAKF,MAAMD,SAAW,IAC/CG,KAAKH,YACLK,KAHS,gBAGG,MARhB,EAAKJ,MAAQ,CAACD,SAAW,GAFR,E,qDAcnB,WAAoBG,KAAKH,a,oBAEzB,WACE,OACE,oCACE,kBAAC,IAAD,CAAUM,MAAM,OAAOC,MAAOJ,KAAKF,MAAMD,UACjCG,KAAKF,MAAMD,SADnB,KACwC,6BACxC,kBAAC,IAAD,CAAUQ,OAAK,GACf,kBAAC,IAAD,CAAUC,KAAG,EAACH,MAAM,UAAUC,MAAM,MAApC,OACA,kBAAC,IAAD,CAAUE,KAAG,EAACH,MAAM,UAAUC,MAAM,MAApC,QACA,kBAAC,IAAD,CAAUE,KAAG,EAACF,MAAM,MAApB,OACA,kBAAC,IAAD,CAAUE,KAAG,EAACH,MAAM,SAASC,MAAM,MAAnC,mB,GA1BwCG,a,MCUjCC,MATf,WACE,OACE,6BACE,gDACA,kBAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.3f8411cb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Progress } from 'reactstrap'\n\nexport default class ReactstrapProgress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {progress : 0};\n  }\n\n  progress =()=>  {\n    if(this.state.progress !== 100) {\n      setTimeout(function() {\n        this.setState({progress: this.state.progress + 1});\n        this.progress();\n      }.bind(this), 100);\n    }\n  }\n\n  componentDidMount(){this.progress()}\n\n  render() {\n    return (\n      <>\n        <Progress color=\"info\" value={this.state.progress}>\n               {this.state.progress}%</Progress><br/>\n        <Progress multi>\n        <Progress bar color='warning' value=\"25\">25%</Progress>\n        <Progress bar color='success' value=\"35\">Wow!</Progress>\n        <Progress bar value=\"15\">Meh</Progress>\n        <Progress bar color='danger' value=\"25\">LOOK OUT!</Progress>\n        </Progress>\n      </>\n    )\n  }\n}\n","import React from \"react\";\nimport Progress from './ReactstrapProgress.js'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nfunction App() {\n  return (\n    <div>\n      <h1>Start React 200!</h1>\n      <Progress></Progress>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}