{"version":3,"sources":["R013_ArrowFunction.js","App.js","reportWebVitals.js","index.js"],"names":["R013_ArrowFunction","props","Function2","num1","num2","num3","console","log","state","arrowFunc","Function5","num4","setTimeout","num","this","Function3","Function4","this_bind","bind","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sSAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,UAAY,SAACC,EAAMC,GACjB,IAAIC,EAAOF,EAAOC,EAClBE,QAAQC,IAAIF,EAAO,sBAAwB,EAAKG,MAAMC,YAtBrC,EA0CnBC,UAAY,SAACP,EAAMC,EAAMC,GACvB,IAAMM,EAAOR,EAAOC,EAAOC,EAC3BO,YAAW,WACTN,QAAQC,IAAII,EAAO,+BAAiC,EAAKH,MAAMC,aAC9D,MA5CH,EAAKD,MAAQ,CACXC,UAAW,WACXI,IAAK,GAJU,E,qDAQnB,WAOE,IAAmBV,IANT,EAODG,QAAQC,IAAIJ,EAAO,kBAN5BW,KAAKZ,UAAU,EAAG,GAClBY,KAAKC,UAAU,EAAG,GAClBD,KAAKE,YACLF,KAAKJ,UAAU,EAAG,EAAG,K,uBAYvB,WACE,IAAIO,EAAYH,KAChBF,YAAW,WACTN,QAAQC,IAAIU,EAAUT,MAAMK,IAAM,qCAClCP,QAAQC,IAAIO,KAAKN,MAAMC,aACtB,O,uBAGL,WACEG,WACE,WACEN,QAAQC,IAAI,mCAAqCO,KAAKN,MAAMC,YAC5DS,KAAKJ,MACP,O,oBAWJ,WACE,OAAO,2D,GAnDqCK,aCYjCC,MAVf,WACE,OACE,6BACE,gDACA,iEACA,kBAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAKjDZ,K","file":"static/js/main.690b0637.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class R013_ArrowFunction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrowFunc: \"React200\",\n      num: 3,\n    };\n  }\n\n  componentDidMount() {\n    Function1(1);\n    this.Function2(1, 1);\n    this.Function3(1, 3);\n    this.Function4();\n    this.Function5(0, 2, 3);\n\n    function Function1(num1) {\n      return console.log(num1 + \". Es5 Function\");\n    }\n  }\n\n  Function2 = (num1, num2) => {\n    let num3 = num1 + num2;\n    console.log(num3 + \". Arrow Function : \" + this.state.arrowFunc);\n  };\n\n  Function3() {\n    var this_bind = this;\n    setTimeout(function () {\n      console.log(this_bind.state.num + \". Es5 Callback Function noBind : \");\n      console.log(this.state.arrowFunc);\n    }, 100);\n  }\n\n  Function4() {\n    setTimeout(\n      function () {\n        console.log(\"4. Es5 Callback Function Bind : \" + this.state.arrowFunc);\n      }.bind(this),\n      100\n    );\n  }\n\n  Function5 = (num1, num2, num3) => {\n    const num4 = num1 + num2 + num3;\n    setTimeout(() => {\n      console.log(num4 + \". Arrow Callback Function : \" + this.state.arrowFunc);\n    }, 100);\n  };\n\n  render() {\n    return <h2>[THIS IS ArrowFunction]</h2>;\n  }\n}\n","import React from \"react\";\nimport './App.css';\nimport ArrowFunc from './R013_ArrowFunction.js';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Start React 200!</h1>\n      <p>ArrowFunc 적용하기</p>\n      <ArrowFunc />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}